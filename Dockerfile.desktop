# syntax=docker/dockerfile:experimental
FROM slaclab/x11-desktop:20231115.0

ENV DEBIAN_FRONTEND noninteractive

COPY mozilla.pin /etc/apt/preferences.d/mozilla 
RUN curl -fsSL https://www.mongodb.org/static/pgp/server-6.0.asc | gpg --dearmor -o /usr/share/keyrings/mongodb-6.0-keyring.gpg \
  && echo "deb [ arch=amd64,arch64 signed-by=/usr/share/keyrings/mongodb-6.0-keyring.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list \
  && apt-get update \
  && wget -q https://packages.mozilla.org/apt/repo-signing-key.gpg -O /usr/share/keyrings/packages.mozilla.org.asc \
  && echo "deb [ arch=amd64 signed-by=/usr/share/keyrings/packages.mozilla.org.asc ] https://packages.mozilla.org/apt mozilla main" > /etc/apt/sources.list.d/mozilla.list \
  && apt-get update \
  && apt-get install -y --no-install-recommends \
    firefox \
    zip unzip \
    python3 python3-dev python3-setuptools python3-pip \
    libtiff5 \
    ed jq \
    sudo \
    less \
    netbase iputils-ping net-tools \
    nodejs \
    mongodb-mongosh mongodb-database-tools \
  && apt-get remove chromium \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/* \
  && ln -s /usr/lib/x86_64-linux-gnu/libtiff.so.5 /usr/lib/x86_64-linux-gnu/libtiff.so.3

ENV CRYOSPARC_ROOT_DIR /app
RUN mkdir -p ${CRYOSPARC_ROOT_DIR}
WORKDIR ${CRYOSPARC_ROOT_DIR}

ARG CRYOSPARC_VERSION
ENV CRYOSPARC_VERSION=${CRYOSPARC_VERSION}

ARG CRYOSPARC_PATCH
ENV CRYOSPARC_PATCH=${CRYOSPARC_PATCH}

RUN echo "USER=`id -u -n`"
# install master
ENV CRYOSPARC_MASTER_DIR ${CRYOSPARC_ROOT_DIR}/cryosparc_master
RUN --mount=type=secret,id=cryosparc_license_id \
  curl -L https://get.cryosparc.com/download/master-v${CRYOSPARC_VERSION}/$(cat /run/secrets/cryosparc_license_id) | tar -xz \
  && cd ${CRYOSPARC_MASTER_DIR} \
  && sed -i '/^# Other$/ a echo \"CRYOSPARC_FORCE_USER=true\" >> config.sh' ${CRYOSPARC_MASTER_DIR}/install.sh \
  && bash ./install.sh --license "$(cat /run/secrets/cryosparc_license_id)" --allowroot --yes  \
  && sed -i 's/^export CRYOSPARC_LICENSE_ID=.*$/export CRYOSPARC_LICENSE_ID=TBD/g' ${CRYOSPARC_MASTER_DIR}/config.sh

# update patches
RUN if [ "" != "${CRYOSPARC_PATCH}" ]; then wget https://get.cryosparc.com/patch_get/v${CRYOSPARC_VERSION}+${CRYOSPARC_PATCH}/master -O ${CRYOSPARC_ROOT_DIR}/cryosparc_master_patch.tar.gz \
  && tar -vxzf ${CRYOSPARC_ROOT_DIR}/cryosparc_master_patch.tar.gz --overwrite --strip-components=1 --directory=${CRYOSPARC_MASTER_DIR} \
  && rm -f ${CRYOSPARC_ROOT_DIR}/cryosparc_master_patch.tar.gz; fi

# patches
RUN sed -i 's:    disk_has_space=.*:    disk_has_space="true":g'  ${CRYOSPARC_MASTER_DIR}/bin/cryosparcm

# install worker
ENV CRYOSPARC_WORKER_DIR ${CRYOSPARC_ROOT_DIR}/cryosparc_worker
RUN --mount=type=secret,id=cryosparc_license_id \
  curl -L https://get.cryosparc.com/download/worker-v${CRYOSPARC_VERSION}/$(cat /run/secrets/cryosparc_license_id) | tar -xz \
  && cd ${CRYOSPARC_WORKER_DIR} \
  && bash ./install.sh --license "$(cat /run/secrets/cryosparc_license_id)" --yes \
  && sed -i 's/^export CRYOSPARC_LICENSE_ID=.*$/export CRYOSPARC_LICENSE_ID=TBD/g' ${CRYOSPARC_WORKER_DIR}/config.sh

# update patches
RUN if [ ! -z "${CRYOSPARC_PATCH}" ]; then wget https://get.cryosparc.com/patch_get/v${CRYOSPARC_VERSION}+${CRYOSPARC_PATCH}/worker -O ${CRYOSPARC_ROOT_DIR}/cryosparc_worker_patch.tar.gz \
  && tar -vxzf ${CRYOSPARC_ROOT_DIR}/cryosparc_worker_patch.tar.gz --overwrite --strip-components=1 --directory=${CRYOSPARC_WORKER_DIR} \
  && rm -f ${CRYOSPARC_ROOT_DIR}/cryosparc_worker_patch.tar.gz; fi

# compile libtiff
RUN ${CRYOSPARC_MASTER_DIR}/deps/anaconda/envs/cryosparc_master_env/bin/python3 ${CRYOSPARC_MASTER_DIR}/cryosparc_compute/blobio/tiff.py \
  && ${CRYOSPARC_WORKER_DIR}/deps/anaconda/envs/cryosparc_worker_env/bin/python3 ${CRYOSPARC_WORKER_DIR}/cryosparc_compute/blobio/tiff.py
####
## install motioncor
####
ARG MOTIONCOR2_VERSION=1.4.5
ENV MOTIONCOR2_VERSION=${MOTIONCOR2_VERSION}
ENV CUDA_TOOLKIT_VERSION="Cuda100-10-22-2021"
RUN cd /usr/local/bin \
  && curl -L 'https://drive.google.com/uc?export=download&id=1-Ub5lBBmel8U8U0uibORiH6wfxp9I1kn' > MotionCor2_${MOTIONCOR2_VERSION}.zip \
  && unzip MotionCor2_${MOTIONCOR2_VERSION}.zip \
  && rm -f MotionCor2_${MOTIONCOR2_VERSION}.zip \
  && ln -sf MotionCor2_${MOTIONCOR2_VERSION}-${CUDA_TOOLKIT_VERSION} MotionCor2

###
# install topaz
###
ARG TOPAZ_VERSION=0.2.5
ENV TOPAZ_VERSION=${TOPAZ_VERSION}
ENV TOPAZ_CUDA_TOOLKIT_VERSION=12.2.0
RUN /app/cryosparc_worker/deps/anaconda/bin/conda install topaz=${TOPAZ_VERSION} cuda-libraries-dev cuda-nvcc cuda-nvtx cuda-cupti -c nvidia/label/cuda-${TOPAZ_CUDA_TOOLKIT_VERSION} -c tbepler -c pytorch

###
#
### finish off
COPY entrypoint.bash /entrypoint.bash
COPY cryosparc.sh /cryosparc.sh
COPY cryosparc-server.sh ${CRYOSPARC_MASTER_DIR}/bin/cryosparc-server.sh

# autostart stuff
COPY cryosparc.desktop /cryosparc.desktop
RUN rm -f /etc/xdg/autostart/xscreensaver.desktop /etc/xdg/autostart/blueman.desktop /etc/xdg/autostart/mate-screensaver.desktop /etc/xdg/autostart/print-applet.desktop /etc/xdg/autostart/xfce4-power-manager.desktop /etc/xdg/autostart/mate-power-manager.desktop

EXPOSE 39000
EXPOSE 39001
EXPOSE 39002
EXPOSE 39003
EXPOSE 39004
EXPOSE 39006

ENTRYPOINT /entrypoint.bash
